/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * https://github.com/coletiv/supplychain-composer-thesis/blob/master/Project/logistics-network/models/org.logistics.testnet.cto
 */

/**
 * Write your model definitions here
 */

namespace org.evin.book.track

concept Address{
  o String county optional
  o String country
  o String street optional
  o String zip optional
}

abstract participant bookNetMember identified by email{
  o String email
  o Address address
  o Double accountBalance
}

participant Distributor extends bookNetMember{
}

participant Publisher extends bookNetMember{
}

participant Customer extends bookNetMember{
}
/**
 *  Government Regulator
 */
participant Regulator identified by email{
  o String regulatorName
  o String email
  o Address address
}

asset OrderContract identified by contractId{
  o String contractId
  --> bookNetMember buyer
  --> bookNetMember seller
  o DateTime arrivalDateTime
  o Double unitPrice
  o Double lateArrivalPenaltyFactor
  o Double damagedPenaltyFactor
  o Double lostPenaltyFactor
}

asset Shipment identified by shipmentId {
  o String shipmentId
  o ShipmentStatus shipmentStatus
  o ItemStatus itemStatus
  o String message optional
  o Long unitCount
  o Location location
  o BookRegisterShipment[] bookRegisterShipment optional
  --> OrderContract contract
  
}

abstract transaction ShipmentTransaction{
  --> Shipment shipment
}

transaction BookRegisterShipment extends ShipmentTransaction{
  o String serials
}

transaction ShipmentReceived extends ShipmentTransaction{
}

transaction UpdateShipment extends ShipmentTransaction{
  o ShipmentStatus shipmentStatus
  o Location newLocation
  o String message optional
  --> bookNetMember newHolder optional
}

enum ShipmentStatus{
  o WAITING
  o PACKING
  o DISPATCHING
  o SHIPPED_IN_TRANSIT
  o CANCELED
  o DELIVERED
  o LOST
} 

enum ItemStatus {
  o GOOD
  o DAMAGED
  o LOST
}

concept Location {
  o String latLong // global location number
  o Address address optional
}

/**
 * Hyperledger tutorial video 5 25:55 REST API
 * https://github.com/jackjulianhickey/Hyperledger-Insurance-Tutorial/blob/master/risk-analysis-tutorial/models/org.acme.riskanalysis.cto 
 */
 concept BookDetails {
  o String type
  o String author
  o String description
  o Double price
  o ItemCondition itemCondition
  o Location location
  --> bookNetMember owner
}
asset Book identified by id {
  o String id
  o BookDetails bookDetails
}

transaction createBook {
    o String id
    o BookDetails bookDetails
}

event NewBookCreated {
    o Book book
}

transaction BookHistoryQuery {
  o String id
}

event BookHistoryQueryResults {
  o String[] results
}

concept ItemCondition {
  o String conditionDescription
  o ItemStatus status
}

event changeBookOwnershipEvent{
--> Book book
--> bookNetMember newOwner
--> bookNetMember oldOwner
}

/**
 * JUST FOR INITIALIZING A DEMO
 */
transaction EvinBookSetupDemo {
}




