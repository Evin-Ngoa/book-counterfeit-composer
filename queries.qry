/** Sample queries for Commodity Trading business network
 * https://developer.ibm.com/tutorials/cl-create-powerful-blockchain-queries-with-hyperledger-composer/
 * https://hyperledger.github.io/composer/v0.19/tutorials/queries
 * https://www.blogsaays.com/blockchain-queries-hyperledger-composer/
*/
query showBookAllHistorians{ 
  description: "Select commodity all historians" 
  statement: 
    SELECT org.hyperledger.composer.system.HistorianRecord 
    WHERE (transactionType == 'AddAsset' OR transactionType == 
'UpdateAsset' OR transactionType == 'RemoveAsset') 
}
 
query findCommmodityHistoriansWithTime{
  description: "Find commodity historians after a specified time"
  statement:
    SELECT org.hyperledger.composer.system.HistorianRecord
    WHERE (transactionTimestamp > _$justnow)
 
}

// At the Publisher Dashboard Show only books owned by the company
// http://localhost:3001/api/queries/getPublisherBooks?addedBy=resource%3Aorg.evin.book.track.Publisher%23publisher1%40gmail.com
// resource:org.evin.book.track.Publisher#publisher1@gmail.com
query getPublisherBooks {
  description: "Getting All My Books [Publishers]"
  statement:
    SELECT org.evin.book.track.Book
    WHERE (addedBy ==_$addedBy)
}

// http://localhost:3001/api/queries/getPublisherBooks?seller=resource%3Aorg.evin.book.track.Publisher%23publisher1%40gmail.com
// resource:org.evin.book.track.Publisher#publisher1@gmail.com
query getPublisherOrders {
  description: "Getting Only Orders [Publishers]"
  statement:
    SELECT org.evin.book.track.OrderContract
    WHERE (seller ==_$seller)
}

query getCustomerOrders {
  description: "Getting Only Orders [Consumers]"
  statement:
    SELECT org.evin.book.track.OrderContract
    WHERE (buyer ==_$buyer)
}

// resource:org.hyperledger.composer.system.NetworkAdmin#admin
// http://localhost:3000/api/queries/getFromActionParticipantHistorian?stakeholder=resource%3Aorg.hyperledger.composer.system.NetworkAdmin%23admin
 query getFromActionParticipantHistorian {
     description:"get user transactions"
     statement:
         SELECT org.hyperledger.composer.system.HistorianRecord
         WHERE (participantInvoking == _$stakeholder)
 }  

  // org.evin.book.track.Trade
  // http://localhost:3000/api/queries/getTransactionTypeFromHistorian?transactionType=org.evin.book.track.Trade
  query getTransactionTypeFromHistorian {
     description:"get transactionType"
     statement:
         SELECT org.hyperledger.composer.system.HistorianRecord
         WHERE (transactionType == _$transactionType)
         ORDER BY transactionTimestamp DESC
  } 

   query getLatestHistorian {
     description:"get All latest History"
     statement:
         SELECT org.hyperledger.composer.system.HistorianRecord
         ORDER BY transactionTimestamp DESC
        
  } 

  // resource:org.evin.book.track.updateReportIsConfirmed#a71a97546fc835c433e9d1c1ee65bc0086c804685e189e40ff11f516a7d024f4
  // resource:org.evin.book.track.EvinBookSetupDemo#07f7e3d8732efa3a4af403a7000af191a6d98bbe378879586fa2af49fcb301ae
   query getLatestHistorianBytransactionInvoked {
     description:"get All latest History By transactionInvoked"
     statement:
         SELECT org.hyperledger.composer.system.HistorianRecord
         WHERE (transactionInvoked == _$transactionInvoked)
         ORDER BY transactionTimestamp DESC
        
  } 
  
  // resource:org.hyperledger.composer.system.NetworkAdmin#admin
   query getLatestHistorianByParticipantInvoking   {
     description:"get All latest History By participantInvoking  "
     statement:
         SELECT org.hyperledger.composer.system.HistorianRecord
         WHERE (participantInvoking  == _$participantInvoking  )
         ORDER BY transactionTimestamp DESC
        
  } 

  query getTradeHistorian {
     description:"get history of trade transaction"
     statement:
         SELECT org.evin.book.track.Trade
         WHERE (newOwner == _$newOwner)
  }  


  // http://localhost:3000/api/queries/getCommodityHistorian?commodity=resource%3Aorg.evin.book.track.Commodity%23C_001
  // resource:org.evin.book.track.Commodity#C_001
  query getCommodityHistorian {
     description:"get history of commodity transaction"
     statement:
         SELECT org.evin.book.track.Trade
         WHERE (commodity == _$commodity)
  }  

  // resource:org.evin.book.track.Book#BOOK_001
  query getBookHistorian {
      description:"get history of book transaction"
      statement:
         SELECT org.evin.book.track.TradeBookOwnership
         WHERE (book == _$book)
  }

  // resource:org.evin.book.track.Book#BOOK_001
  query getBookOwnerHistorian {
     description:"get history of trade transaction"
     statement:
         SELECT org.evin.book.track.TradeBookOwnership
         WHERE (book == _$bookId)
  } 

  // Get history of client scanning activity
  // resource:org.evin.book.track.Customer#customer@gmail.com
  // resource:org.evin.book.track.Customer#customer-evin@gmail.com
  query getScanBookHistorian {
     description:"get history of scanning transaction"
     statement:
         SELECT org.evin.book.track.updateCustomerPoints
         WHERE (customer == _$customer)
         ORDER BY timestamp DESC
  }

  // Get Admin history of client scanning activity
  // resource:org.evin.book.track.Customer#customer@gmail.com
  query getAdminScanBookHistorian {
     description:"get history of all scanning transaction"
     statement:
         SELECT org.evin.book.track.updateCustomerPoints
         ORDER BY timestamp DESC
  }

  // Get history of shipment status Activity
  // resource:org.evin.book.track.Shipment#SHIP_001
  query getShipmentStatusHistorian {
     description:"get history of shipment status transaction"
     statement:
         SELECT org.evin.book.track.updateShipmentStatus
         WHERE (shipment == _$shipment)
         ORDER BY timestamp DESC
  }

  // Get history of shipment status Activity
  // resource:org.evin.book.track.Shipment#SHIP_001
  query getAdminShipmentStatusHistorian {
     description:"get history of  all shipment status transaction"
     statement:
         SELECT org.evin.book.track.updateShipmentStatus
         ORDER BY timestamp DESC
  }

    // Get history of shipment item status Activity
  // resource:org.evin.book.track.Shipment#SHIP_001
  query getShipmentItemStatusHistorian {
     description:"get history of shipment status transaction"
     statement:
         SELECT org.evin.book.track.updateShipmentItemStatus
         WHERE (shipment == _$shipment)
         ORDER BY timestamp DESC
  }

  // Get history of shipment item status Activity
  // resource:org.evin.book.track.Shipment#SHIP_001
  query getAdminShipmentItemStatusHistorian {
     description:"get history of  all shipment status transaction"
     statement:
         SELECT org.evin.book.track.updateShipmentItemStatus
         ORDER BY timestamp DESC
  }

  // Get history of order status Activity
  // resource:org.evin.book.track.Order#OrderID
  query getOrderStatusHistorian {
     description:"get history of order status transaction"
     statement:
         SELECT org.evin.book.track.updateOrderStatus
         WHERE (order == _$order)
         ORDER BY timestamp DESC
  }

  // Get Admin history of order status Activity
  // resource:org.evin.book.track.Order
  query getAdminOrderStatusHistorian {
     description:"get history of all order status transaction"
     statement:
         SELECT org.evin.book.track.updateOrderStatus
         ORDER BY timestamp DESC
  }

  // Get history of confirmed report by publisher Activity
  // resource:org.evin.book.track.Report#ReportID
  query getIsConfimedReportHistorian {
     description:"get history of order status transaction"
     statement:
         SELECT org.evin.book.track.updateReportIsConfirmed
         WHERE (report == _$report)
         ORDER BY timestamp DESC
  }

  // Historian for registering book in shipment
  // resource:org.evin.book.track.Book#BookID
  query getBookRegisterToShipmentHistorian {
     description:"get history of book addition to shipment"
     statement:
         SELECT org.evin.book.track.BookRegisterShipment
         WHERE (book == _$book)
         ORDER BY timestamp DESC
  }
  
   // resource:org.evin.book.track.Book#BookID
  query getAdminBookRegisterToShipmentHistorian {
     description:"Admin get history of book addition to shipment"
     statement:
         SELECT org.evin.book.track.BookRegisterShipment
         ORDER BY timestamp DESC
  }

  // Historian for registering book in shipment
  // resource:org.evin.book.track.Shipment#shipmentID
  query getBookOwnershipHistorian {
     description:"get history of book status transaction based on Shipment"
     statement:
         SELECT org.evin.book.track.ShipOwnership
         WHERE (shipment == _$shipmentId)
         ORDER BY timestamp DESC
  }
  
   // resource:org.evin.book.track.Shipment
  query getAdminBookOwnershipHistorian {
     description:"get history of book status transaction based on ShipmentID"
     statement:
         SELECT org.evin.book.track.ShipOwnership
         ORDER BY timestamp DESC
  }

  // Get history of all confirmed report by publisher Activity
  // resource:org.evin.book.track.Report#ReportID
  query getAdminIsConfimedReportHistorian {
     description:"get history of all order status transaction for the Admin"
     statement:
         SELECT org.evin.book.track.updateReportIsConfirmed
         ORDER BY timestamp DESC
  }

  // C-6a3Gm
  // http://localhost:3001/api/queries/getCustomerEmailonMemberID?memberId=C-002
  query getCustomerEmailonMemberID {
     description:"Get email of customer based on the supplied memberID"
     statement:
         SELECT org.evin.book.track.Customer
         WHERE (memberId == _$memberId)
  }

  // http://localhost:3001/api/queries/getBookByID?id=BOOKID
  query getBookByID {
         description:"Get Book By ID"
     statement:
         SELECT org.evin.book.track.Book
         WHERE (id == _$id)
  }
//  HISTORY PLAN
//  https://stackoverflow.com/questions/46372302/how-do-i-find-the-history-of-transactions-for-an-asset-in-a-blockchain-implement?rq=1